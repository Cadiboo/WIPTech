package cadiboo.wiptech;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

@Mod.EventBusSubscriber
public class Registry {
	
		@SubscribeEvent
		public static void registerBlocks(RegistryEvent.Register<Block> event)
		{	
			event.getRegistry().registerAll(ModBlocks.BLOCKS);
			Utils.getLogger().info("Registered blocks");
			GameRegistry.registerTileEntity(TileEntityCounter.class, Reference.ID+"TileEntityCounter");
			GameRegistry.registerTileEntity(TileEntityStorer.class, Reference.ID+"TileEntityStorer");
			GameRegistry.registerTileEntity(TileEntityCrusher.class, Reference.ID+"TileEntityCrusher");
			Utils.getLogger().info("Registered TileEntities");
		}

		@SubscribeEvent
		public static void registerItems(RegistryEvent.Register<Item> event)
		{	
			event.getRegistry().registerAll(ModItems.ITEMS);

			for (Block block : ModBlocks.BLOCKS)
			{
				event.getRegistry().register(new ItemBlock(block).setRegistryName(block.getRegistryName()));
			}

			Utils.getLogger().info("Registered items");
			//Register OreDict
			//Utils.getLogger().info("Registered OreDictionary");
			GameRegistry.addSmelting(ModBlocks.COPPER_ORE, new ItemStack(ModItems.COPPER_INGOT, 3), 0F);
			GameRegistry.addSmelting(ModBlocks.ALUMINUM_ORE, new ItemStack(ModItems.ALUMINUM_INGOT, 3), 0F);
			GameRegistry.addSmelting(ModBlocks.OSMIUM_ORE, new ItemStack(ModItems.OSMIUM_INGOT, 3), 0F);
			GameRegistry.addSmelting(ModBlocks.TUNGSTEN_ORE, new ItemStack(ModItems.TUNGSTEN_INGOT, 3), 0F);
			
		}

		@SubscribeEvent
		public static void registerModels(ModelRegistryEvent event)
		{
			for (Block block: ModBlocks.BLOCKS)
			{
				ModelLoader.setCustomModelResourceLocation(Item.getItemFromBlock(block), 0, new ModelResourceLocation(block.getRegistryName(), "inventory"));
				//if(block.hasSubTypes()) {}
			}

			for (Item item: ModItems.ITEMS)
			{
				/*if(item instanceof ItemCrusherBit || item instanceof ItemCrusherBitHolder) {
					//ModelLoader.setCustomModelResourceLocation(item, 0, new ModelResourceLocation(item.getRegistryName(), "ground"));
					ModelLoader.setCustomModelResourceLocation(item, 0, new ModelResourceLocation(item.getRegistryName()+"_ground", "inventory"));
				}*/
				if(!item.getHasSubtypes()) {
					ModelLoader.setCustomModelResourceLocation(item, 0, new ModelResourceLocation(item.getRegistryName(), "inventory"));
				} else {
					if(item instanceof ItemMagneticMetalRod) {
						for(MagneticMetalRods rod : EnumHandler.MagneticMetalRods.values()) { 
							//find a way to move models from block to item
							//ModelLoader.setCustomModelResourceLocation(item, rod.getID(), new ModelResourceLocation(rod.getName() + "=" + MagneticMetalRods.values()[rod.getID()]));
							ModelLoader.setCustomModelResourceLocation(item, rod.getID(), new ModelResourceLocation(Reference.ID+":rods/" + rod.getName()));
							//ModelLoader.setCustomModelResourceLocation(item, rod.getID(), new ModelResourceLocation(Reference.ID+":magnetic_metal_rod", rod.getName()));
						}
					}
				}
			}

			Utils.getLogger().info("Registered models");
		}

		//I shouldn't really be here but I don't feel like creating another class for subscribe events that aren't registry related right now
		@SubscribeEvent
		public static void BlockRightClickEvent(PlayerInteractEvent.RightClickBlock event)
		{
			if(event.getHand() == EnumHand.MAIN_HAND)
			{
				if(event.getEntityPlayer().isSneaking())
				{
					if(event.getWorld().getBlockState(event.getPos()).getBlock() != null && event.getWorld().getBlockState(event.getPos()).getBlock() instanceof BlockCrusher)
					{
						event.setUseBlock(net.minecraftforge.fml.common.eventhandler.Event.Result.ALLOW);
						Utils.getLogger().info("onBlockActivated event called for block "+event.getWorld().getBlockState(event.getPos()).getBlock()+" because PlayerInteractEvent.RightClickBlock#setUseBlock was set to "+event.getUseBlock());
					}
				}
			}
		}

		/*@SubscribeEvent
		public static void registerRecipies(RegistryEvent.Register<IRecipe> event)
		{	
			for (IRecipe recipe: ModRecipes.RECIPES) {
				event.getRegistry().register(recipe);
			}
			//GameRegistry.addSmelting(new ItemStack(new BlockCopperOre("copper_ore", Material.ROCK)), new ItemStack(new ItemCopperIngot("copper_ingot")), 1.0F);
			//GameRegistry.addSmelting(Items.MILK_BUCKET, new ItemStack(ModItems.COPPER_INGOT, 3), 0F);
			GameRegistry.addSmelting(ModBlocks.COPPER_ORE, new ItemStack(ModItems.COPPER_INGOT, 3), 0F);

			Utils.getLogger().info("Registered Recipies");
		}*/

	}